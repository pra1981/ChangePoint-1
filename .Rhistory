dist_err(estimation_LSTV_1$Break_Point,break_point)/n,
PDR_FDR(estimation_LSTV_1$raw_beta,raw_Beta),
PDR_bias(estimation_LSTV_1$raw_beta,raw_Beta))
)
result_LSTV_2=rbind(result_LSTV_2,c(
dist_err(break_point,estimation_LSTV_2$Break_Point)/n,
dist_err(estimation_LSTV_2$Break_Point,break_point)/n,
PDR_FDR(estimation_LSTV_2$raw_beta,raw_Beta),
PDR_bias(estimation_LSTV_2$raw_beta,raw_Beta))
)
result_cpm=rbind(result_cpm,c(
dist_err(break_point,estimation_cpm$Break_Point)/n,
dist_err(estimation_cpm$Break_Point,break_point)/n,
PDR_FDR(estimation_cpm$raw_beta,raw_Beta),
PDR_bias(estimation_cpm$raw_beta,raw_Beta))
)
result_bcp=rbind(result_SIFS,c(
dist_err(break_point,estimation_bcp$Break_Point)/n,
dist_err(estimation_bcp$Break_Point,break_point)/n,
PDR_FDR(estimation_bcp$raw_beta,raw_Beta),
PDR_bias(estimation_bcp$raw_beta,raw_Beta))
)
result_ecp=rbind(result_SIFS,c(
dist_err(break_point,estimation_ecp$Break_Point)/n,
dist_err(estimation_ecp$Break_Point,break_point)/n,
PDR_FDR(estimation_ecp$raw_beta,raw_Beta),
PDR_bias(estimation_ecp$raw_beta,raw_Beta))
)
print(i)
}
sim_list=list(SIFS=result_SIFS,LS_TV1=result_LSTV_1,LS_TV2=result_LSTV_2,CPM=result_cpm,BCP=result_bcp,ECP=result_ecp)
makeTable(sim_list)
sim_list_2000=sim_list
save(sim_list_200,sim_list_500,sim_list_1000,sim_list_2000,file='sim_sigma01.RData')
n=200
sigma=0.5
p=0
K=12
##Initial Setup
break_point = c(10, 13, 15, 23, 25, 40, 44, 65, 76, 78, 81)*n/100
break_point_ex = c(0,break_point,n)
diff_bp = diff(break_point_ex)
Beta = matrix(c(0  ,40 ,-10 , 20 ,-20 , 30, -12 ,  9  ,52  ,21 , 42  , 0)/20 -0.8,nrow=1,byrow = TRUE)
raw_Beta=matrix(0,p+1,n)
raw_Beta[,c(0,break_point)+1]=Beta[1:(p+1),]
result_SIFS=NULL
result_LSTV_1=NULL
result_LSTV_2=NULL
result_cpm=NULL
result_bcp=NULL
result_ecp=NULL
for (i in 1:100){
X = matrix(rnorm(n*p),n,p)
X = cbind(rep(1,n),X)
Y = matrix(0,n,1)
##Setting 1
for (bp in 1:K){
Y = Y + diag(c(rep(0,break_point_ex[bp]),rep(1,diff_bp[bp]),rep(0,n-break_point_ex[bp+1])))%*% X %*% Beta[1:(p+1),bp]
}
##Setting 2
#idx=sample(1:12,n,replace=TRUE,prob=c(0.1, 0.03, 0.02, 0.08, 0.02, 0.15, 0.04, 0.21, 0.11, 0.02, 0.03,0.19))
#idx=idx[order(idx)]
#break_point=which(diff(idx)==1)
#raw_Beta=matrix(0,p+1,n)
#raw_Beta[,c(0,break_point)+1]=Beta[1:(p+1),]
#    for ( j in 1:n){
#    Y[j]=X[j,]%*% Beta[idx[j]]
#}
##Add Noise
E = matrix(rnorm(n,0,sigma),n,1)
Y = Y + E
##Evaluation
estimation_SIFS=SIFS(X,Y,n,p,TRUE)
estimation_LSTV_1=LS_TV(Y,n,3*(K-1),K-1)
estimation_LSTV_2=LS_TV(Y,n,3*(K-1),-1)
estimation_cpm=CPM(Y)
estimation_bcp=BCP(Y)
estimation_ecp=ECP(Y)
result_SIFS=rbind(result_SIFS,c(
dist_err(break_point,estimation_SIFS$Break_Point)/n,
dist_err(estimation_SIFS$Break_Point,break_point)/n,
PDR_FDR(estimation_SIFS$raw_beta,raw_Beta),
PDR_bias(estimation_SIFS$raw_beta,raw_Beta))
)
result_LSTV_1=rbind(result_LSTV_1,c(
dist_err(break_point,estimation_LSTV_1$Break_Point)/n,
dist_err(estimation_LSTV_1$Break_Point,break_point)/n,
PDR_FDR(estimation_LSTV_1$raw_beta,raw_Beta),
PDR_bias(estimation_LSTV_1$raw_beta,raw_Beta))
)
result_LSTV_2=rbind(result_LSTV_2,c(
dist_err(break_point,estimation_LSTV_2$Break_Point)/n,
dist_err(estimation_LSTV_2$Break_Point,break_point)/n,
PDR_FDR(estimation_LSTV_2$raw_beta,raw_Beta),
PDR_bias(estimation_LSTV_2$raw_beta,raw_Beta))
)
result_cpm=rbind(result_cpm,c(
dist_err(break_point,estimation_cpm$Break_Point)/n,
dist_err(estimation_cpm$Break_Point,break_point)/n,
PDR_FDR(estimation_cpm$raw_beta,raw_Beta),
PDR_bias(estimation_cpm$raw_beta,raw_Beta))
)
result_bcp=rbind(result_SIFS,c(
dist_err(break_point,estimation_bcp$Break_Point)/n,
dist_err(estimation_bcp$Break_Point,break_point)/n,
PDR_FDR(estimation_bcp$raw_beta,raw_Beta),
PDR_bias(estimation_bcp$raw_beta,raw_Beta))
)
result_ecp=rbind(result_SIFS,c(
dist_err(break_point,estimation_ecp$Break_Point)/n,
dist_err(estimation_ecp$Break_Point,break_point)/n,
PDR_FDR(estimation_ecp$raw_beta,raw_Beta),
PDR_bias(estimation_ecp$raw_beta,raw_Beta))
)
print(i)
}
sim_list=list(SIFS=result_SIFS,LS_TV1=result_LSTV_1,LS_TV2=result_LSTV_2,CPM=result_cpm,BCP=result_bcp,ECP=result_ecp)
makeTable(sim_list)
sim_list_200=sim_list
n=500
sigma=0.5
p=0
K=12
##Initial Setup
break_point = c(10, 13, 15, 23, 25, 40, 44, 65, 76, 78, 81)*n/100
break_point_ex = c(0,break_point,n)
diff_bp = diff(break_point_ex)
Beta = matrix(c(0  ,40 ,-10 , 20 ,-20 , 30, -12 ,  9  ,52  ,21 , 42  , 0)/20 -0.8,nrow=1,byrow = TRUE)
raw_Beta=matrix(0,p+1,n)
raw_Beta[,c(0,break_point)+1]=Beta[1:(p+1),]
result_SIFS=NULL
result_LSTV_1=NULL
result_LSTV_2=NULL
result_cpm=NULL
result_bcp=NULL
result_ecp=NULL
for (i in 1:100){
X = matrix(rnorm(n*p),n,p)
X = cbind(rep(1,n),X)
Y = matrix(0,n,1)
##Setting 1
for (bp in 1:K){
Y = Y + diag(c(rep(0,break_point_ex[bp]),rep(1,diff_bp[bp]),rep(0,n-break_point_ex[bp+1])))%*% X %*% Beta[1:(p+1),bp]
}
##Setting 2
#idx=sample(1:12,n,replace=TRUE,prob=c(0.1, 0.03, 0.02, 0.08, 0.02, 0.15, 0.04, 0.21, 0.11, 0.02, 0.03,0.19))
#idx=idx[order(idx)]
#break_point=which(diff(idx)==1)
#raw_Beta=matrix(0,p+1,n)
#raw_Beta[,c(0,break_point)+1]=Beta[1:(p+1),]
#    for ( j in 1:n){
#    Y[j]=X[j,]%*% Beta[idx[j]]
#}
##Add Noise
E = matrix(rnorm(n,0,sigma),n,1)
Y = Y + E
##Evaluation
estimation_SIFS=SIFS(X,Y,n,p,TRUE)
estimation_LSTV_1=LS_TV(Y,n,3*(K-1),K-1)
estimation_LSTV_2=LS_TV(Y,n,3*(K-1),-1)
estimation_cpm=CPM(Y)
estimation_bcp=BCP(Y)
estimation_ecp=ECP(Y)
result_SIFS=rbind(result_SIFS,c(
dist_err(break_point,estimation_SIFS$Break_Point)/n,
dist_err(estimation_SIFS$Break_Point,break_point)/n,
PDR_FDR(estimation_SIFS$raw_beta,raw_Beta),
PDR_bias(estimation_SIFS$raw_beta,raw_Beta))
)
result_LSTV_1=rbind(result_LSTV_1,c(
dist_err(break_point,estimation_LSTV_1$Break_Point)/n,
dist_err(estimation_LSTV_1$Break_Point,break_point)/n,
PDR_FDR(estimation_LSTV_1$raw_beta,raw_Beta),
PDR_bias(estimation_LSTV_1$raw_beta,raw_Beta))
)
result_LSTV_2=rbind(result_LSTV_2,c(
dist_err(break_point,estimation_LSTV_2$Break_Point)/n,
dist_err(estimation_LSTV_2$Break_Point,break_point)/n,
PDR_FDR(estimation_LSTV_2$raw_beta,raw_Beta),
PDR_bias(estimation_LSTV_2$raw_beta,raw_Beta))
)
result_cpm=rbind(result_cpm,c(
dist_err(break_point,estimation_cpm$Break_Point)/n,
dist_err(estimation_cpm$Break_Point,break_point)/n,
PDR_FDR(estimation_cpm$raw_beta,raw_Beta),
PDR_bias(estimation_cpm$raw_beta,raw_Beta))
)
result_bcp=rbind(result_SIFS,c(
dist_err(break_point,estimation_bcp$Break_Point)/n,
dist_err(estimation_bcp$Break_Point,break_point)/n,
PDR_FDR(estimation_bcp$raw_beta,raw_Beta),
PDR_bias(estimation_bcp$raw_beta,raw_Beta))
)
result_ecp=rbind(result_SIFS,c(
dist_err(break_point,estimation_ecp$Break_Point)/n,
dist_err(estimation_ecp$Break_Point,break_point)/n,
PDR_FDR(estimation_ecp$raw_beta,raw_Beta),
PDR_bias(estimation_ecp$raw_beta,raw_Beta))
)
print(i)
}
sim_list=list(SIFS=result_SIFS,LS_TV1=result_LSTV_1,LS_TV2=result_LSTV_2,CPM=result_cpm,BCP=result_bcp,ECP=result_ecp)
makeTable(sim_list)
sim_list_500=sim_list
n=1000
sigma=0.5
p=0
K=12
##Initial Setup
break_point = c(10, 13, 15, 23, 25, 40, 44, 65, 76, 78, 81)*n/100
break_point_ex = c(0,break_point,n)
diff_bp = diff(break_point_ex)
Beta = matrix(c(0  ,40 ,-10 , 20 ,-20 , 30, -12 ,  9  ,52  ,21 , 42  , 0)/20 -0.8,nrow=1,byrow = TRUE)
raw_Beta=matrix(0,p+1,n)
raw_Beta[,c(0,break_point)+1]=Beta[1:(p+1),]
result_SIFS=NULL
result_LSTV_1=NULL
result_LSTV_2=NULL
result_cpm=NULL
result_bcp=NULL
result_ecp=NULL
for (i in 1:100){
X = matrix(rnorm(n*p),n,p)
X = cbind(rep(1,n),X)
Y = matrix(0,n,1)
##Setting 1
for (bp in 1:K){
Y = Y + diag(c(rep(0,break_point_ex[bp]),rep(1,diff_bp[bp]),rep(0,n-break_point_ex[bp+1])))%*% X %*% Beta[1:(p+1),bp]
}
##Setting 2
#idx=sample(1:12,n,replace=TRUE,prob=c(0.1, 0.03, 0.02, 0.08, 0.02, 0.15, 0.04, 0.21, 0.11, 0.02, 0.03,0.19))
#idx=idx[order(idx)]
#break_point=which(diff(idx)==1)
#raw_Beta=matrix(0,p+1,n)
#raw_Beta[,c(0,break_point)+1]=Beta[1:(p+1),]
#    for ( j in 1:n){
#    Y[j]=X[j,]%*% Beta[idx[j]]
#}
##Add Noise
E = matrix(rnorm(n,0,sigma),n,1)
Y = Y + E
##Evaluation
estimation_SIFS=SIFS(X,Y,n,p,TRUE)
estimation_LSTV_1=LS_TV(Y,n,3*(K-1),K-1)
estimation_LSTV_2=LS_TV(Y,n,3*(K-1),-1)
estimation_cpm=CPM(Y)
estimation_bcp=BCP(Y)
estimation_ecp=ECP(Y)
result_SIFS=rbind(result_SIFS,c(
dist_err(break_point,estimation_SIFS$Break_Point)/n,
dist_err(estimation_SIFS$Break_Point,break_point)/n,
PDR_FDR(estimation_SIFS$raw_beta,raw_Beta),
PDR_bias(estimation_SIFS$raw_beta,raw_Beta))
)
result_LSTV_1=rbind(result_LSTV_1,c(
dist_err(break_point,estimation_LSTV_1$Break_Point)/n,
dist_err(estimation_LSTV_1$Break_Point,break_point)/n,
PDR_FDR(estimation_LSTV_1$raw_beta,raw_Beta),
PDR_bias(estimation_LSTV_1$raw_beta,raw_Beta))
)
result_LSTV_2=rbind(result_LSTV_2,c(
dist_err(break_point,estimation_LSTV_2$Break_Point)/n,
dist_err(estimation_LSTV_2$Break_Point,break_point)/n,
PDR_FDR(estimation_LSTV_2$raw_beta,raw_Beta),
PDR_bias(estimation_LSTV_2$raw_beta,raw_Beta))
)
result_cpm=rbind(result_cpm,c(
dist_err(break_point,estimation_cpm$Break_Point)/n,
dist_err(estimation_cpm$Break_Point,break_point)/n,
PDR_FDR(estimation_cpm$raw_beta,raw_Beta),
PDR_bias(estimation_cpm$raw_beta,raw_Beta))
)
result_bcp=rbind(result_SIFS,c(
dist_err(break_point,estimation_bcp$Break_Point)/n,
dist_err(estimation_bcp$Break_Point,break_point)/n,
PDR_FDR(estimation_bcp$raw_beta,raw_Beta),
PDR_bias(estimation_bcp$raw_beta,raw_Beta))
)
result_ecp=rbind(result_SIFS,c(
dist_err(break_point,estimation_ecp$Break_Point)/n,
dist_err(estimation_ecp$Break_Point,break_point)/n,
PDR_FDR(estimation_ecp$raw_beta,raw_Beta),
PDR_bias(estimation_ecp$raw_beta,raw_Beta))
)
print(i)
}
sim_list=list(SIFS=result_SIFS,LS_TV1=result_LSTV_1,LS_TV2=result_LSTV_2,CPM=result_cpm,BCP=result_bcp,ECP=result_ecp)
makeTable(sim_list)
sim_list_1000=sim_list
n=2000
sigma=0.5
p=0
K=12
##Initial Setup
break_point = c(10, 13, 15, 23, 25, 40, 44, 65, 76, 78, 81)*n/100
break_point_ex = c(0,break_point,n)
diff_bp = diff(break_point_ex)
Beta = matrix(c(0  ,40 ,-10 , 20 ,-20 , 30, -12 ,  9  ,52  ,21 , 42  , 0)/20 -0.8,nrow=1,byrow = TRUE)
raw_Beta=matrix(0,p+1,n)
raw_Beta[,c(0,break_point)+1]=Beta[1:(p+1),]
result_SIFS=NULL
result_LSTV_1=NULL
result_LSTV_2=NULL
result_cpm=NULL
result_bcp=NULL
result_ecp=NULL
for (i in 1:100){
X = matrix(rnorm(n*p),n,p)
X = cbind(rep(1,n),X)
Y = matrix(0,n,1)
##Setting 1
for (bp in 1:K){
Y = Y + diag(c(rep(0,break_point_ex[bp]),rep(1,diff_bp[bp]),rep(0,n-break_point_ex[bp+1])))%*% X %*% Beta[1:(p+1),bp]
}
##Setting 2
#idx=sample(1:12,n,replace=TRUE,prob=c(0.1, 0.03, 0.02, 0.08, 0.02, 0.15, 0.04, 0.21, 0.11, 0.02, 0.03,0.19))
#idx=idx[order(idx)]
#break_point=which(diff(idx)==1)
#raw_Beta=matrix(0,p+1,n)
#raw_Beta[,c(0,break_point)+1]=Beta[1:(p+1),]
#    for ( j in 1:n){
#    Y[j]=X[j,]%*% Beta[idx[j]]
#}
##Add Noise
E = matrix(rnorm(n,0,sigma),n,1)
Y = Y + E
##Evaluation
estimation_SIFS=SIFS(X,Y,n,p,TRUE)
estimation_LSTV_1=LS_TV(Y,n,3*(K-1),K-1)
estimation_LSTV_2=LS_TV(Y,n,3*(K-1),-1)
estimation_cpm=CPM(Y)
estimation_bcp=BCP(Y)
estimation_ecp=ECP(Y)
result_SIFS=rbind(result_SIFS,c(
dist_err(break_point,estimation_SIFS$Break_Point)/n,
dist_err(estimation_SIFS$Break_Point,break_point)/n,
PDR_FDR(estimation_SIFS$raw_beta,raw_Beta),
PDR_bias(estimation_SIFS$raw_beta,raw_Beta))
)
result_LSTV_1=rbind(result_LSTV_1,c(
dist_err(break_point,estimation_LSTV_1$Break_Point)/n,
dist_err(estimation_LSTV_1$Break_Point,break_point)/n,
PDR_FDR(estimation_LSTV_1$raw_beta,raw_Beta),
PDR_bias(estimation_LSTV_1$raw_beta,raw_Beta))
)
result_LSTV_2=rbind(result_LSTV_2,c(
dist_err(break_point,estimation_LSTV_2$Break_Point)/n,
dist_err(estimation_LSTV_2$Break_Point,break_point)/n,
PDR_FDR(estimation_LSTV_2$raw_beta,raw_Beta),
PDR_bias(estimation_LSTV_2$raw_beta,raw_Beta))
)
result_cpm=rbind(result_cpm,c(
dist_err(break_point,estimation_cpm$Break_Point)/n,
dist_err(estimation_cpm$Break_Point,break_point)/n,
PDR_FDR(estimation_cpm$raw_beta,raw_Beta),
PDR_bias(estimation_cpm$raw_beta,raw_Beta))
)
result_bcp=rbind(result_SIFS,c(
dist_err(break_point,estimation_bcp$Break_Point)/n,
dist_err(estimation_bcp$Break_Point,break_point)/n,
PDR_FDR(estimation_bcp$raw_beta,raw_Beta),
PDR_bias(estimation_bcp$raw_beta,raw_Beta))
)
result_ecp=rbind(result_SIFS,c(
dist_err(break_point,estimation_ecp$Break_Point)/n,
dist_err(estimation_ecp$Break_Point,break_point)/n,
PDR_FDR(estimation_ecp$raw_beta,raw_Beta),
PDR_bias(estimation_ecp$raw_beta,raw_Beta))
)
print(i)
}
sim_list=list(SIFS=result_SIFS,LS_TV1=result_LSTV_1,LS_TV2=result_LSTV_2,CPM=result_cpm,BCP=result_bcp,ECP=result_ecp)
makeTable(sim_list)
sim_list_2000=sim_list
save(sim_list_200,sim_list_500,sim_list_1000,sim_list_2000,file='sim_sigma05.RData')
result_SIFS
for (i in 35:100){
X = matrix(rnorm(n*p),n,p)
X = cbind(rep(1,n),X)
Y = matrix(0,n,1)
##Setting 1
for (bp in 1:K){
Y = Y + diag(c(rep(0,break_point_ex[bp]),rep(1,diff_bp[bp]),rep(0,n-break_point_ex[bp+1])))%*% X %*% Beta[1:(p+1),bp]
}
##Setting 2
#idx=sample(1:12,n,replace=TRUE,prob=c(0.1, 0.03, 0.02, 0.08, 0.02, 0.15, 0.04, 0.21, 0.11, 0.02, 0.03,0.19))
#idx=idx[order(idx)]
#break_point=which(diff(idx)==1)
#raw_Beta=matrix(0,p+1,n)
#raw_Beta[,c(0,break_point)+1]=Beta[1:(p+1),]
#    for ( j in 1:n){
#    Y[j]=X[j,]%*% Beta[idx[j]]
#}
##Add Noise
E = matrix(rnorm(n,0,sigma),n,1)
Y = Y + E
##Evaluation
estimation_SIFS=SIFS(X,Y,n,p,TRUE)
estimation_LSTV_1=LS_TV(Y,n,3*(K-1),K-1)
estimation_LSTV_2=LS_TV(Y,n,3*(K-1),-1)
estimation_cpm=CPM(Y)
estimation_bcp=BCP(Y)
estimation_ecp=ECP(Y)
result_SIFS=rbind(result_SIFS,c(
dist_err(break_point,estimation_SIFS$Break_Point)/n,
dist_err(estimation_SIFS$Break_Point,break_point)/n,
PDR_FDR(estimation_SIFS$raw_beta,raw_Beta),
PDR_bias(estimation_SIFS$raw_beta,raw_Beta))
)
result_LSTV_1=rbind(result_LSTV_1,c(
dist_err(break_point,estimation_LSTV_1$Break_Point)/n,
dist_err(estimation_LSTV_1$Break_Point,break_point)/n,
PDR_FDR(estimation_LSTV_1$raw_beta,raw_Beta),
PDR_bias(estimation_LSTV_1$raw_beta,raw_Beta))
)
result_LSTV_2=rbind(result_LSTV_2,c(
dist_err(break_point,estimation_LSTV_2$Break_Point)/n,
dist_err(estimation_LSTV_2$Break_Point,break_point)/n,
PDR_FDR(estimation_LSTV_2$raw_beta,raw_Beta),
PDR_bias(estimation_LSTV_2$raw_beta,raw_Beta))
)
result_cpm=rbind(result_cpm,c(
dist_err(break_point,estimation_cpm$Break_Point)/n,
dist_err(estimation_cpm$Break_Point,break_point)/n,
PDR_FDR(estimation_cpm$raw_beta,raw_Beta),
PDR_bias(estimation_cpm$raw_beta,raw_Beta))
)
result_bcp=rbind(result_SIFS,c(
dist_err(break_point,estimation_bcp$Break_Point)/n,
dist_err(estimation_bcp$Break_Point,break_point)/n,
PDR_FDR(estimation_bcp$raw_beta,raw_Beta),
PDR_bias(estimation_bcp$raw_beta,raw_Beta))
)
result_ecp=rbind(result_SIFS,c(
dist_err(break_point,estimation_ecp$Break_Point)/n,
dist_err(estimation_ecp$Break_Point,break_point)/n,
PDR_FDR(estimation_ecp$raw_beta,raw_Beta),
PDR_bias(estimation_ecp$raw_beta,raw_Beta))
)
print(i)
}
length(result_SIFS)
dim(result_SIFS)
for (i in 98:100){
X = matrix(rnorm(n*p),n,p)
X = cbind(rep(1,n),X)
Y = matrix(0,n,1)
##Setting 1
for (bp in 1:K){
Y = Y + diag(c(rep(0,break_point_ex[bp]),rep(1,diff_bp[bp]),rep(0,n-break_point_ex[bp+1])))%*% X %*% Beta[1:(p+1),bp]
}
##Setting 2
#idx=sample(1:12,n,replace=TRUE,prob=c(0.1, 0.03, 0.02, 0.08, 0.02, 0.15, 0.04, 0.21, 0.11, 0.02, 0.03,0.19))
#idx=idx[order(idx)]
#break_point=which(diff(idx)==1)
#raw_Beta=matrix(0,p+1,n)
#raw_Beta[,c(0,break_point)+1]=Beta[1:(p+1),]
#    for ( j in 1:n){
#    Y[j]=X[j,]%*% Beta[idx[j]]
#}
##Add Noise
E = matrix(rnorm(n,0,sigma),n,1)
Y = Y + E
##Evaluation
estimation_SIFS=SIFS(X,Y,n,p,TRUE)
estimation_LSTV_1=LS_TV(Y,n,3*(K-1),K-1)
estimation_LSTV_2=LS_TV(Y,n,3*(K-1),-1)
estimation_cpm=CPM(Y)
estimation_bcp=BCP(Y)
estimation_ecp=ECP(Y)
result_SIFS=rbind(result_SIFS,c(
dist_err(break_point,estimation_SIFS$Break_Point)/n,
dist_err(estimation_SIFS$Break_Point,break_point)/n,
PDR_FDR(estimation_SIFS$raw_beta,raw_Beta),
PDR_bias(estimation_SIFS$raw_beta,raw_Beta))
)
result_LSTV_1=rbind(result_LSTV_1,c(
dist_err(break_point,estimation_LSTV_1$Break_Point)/n,
dist_err(estimation_LSTV_1$Break_Point,break_point)/n,
PDR_FDR(estimation_LSTV_1$raw_beta,raw_Beta),
PDR_bias(estimation_LSTV_1$raw_beta,raw_Beta))
)
result_LSTV_2=rbind(result_LSTV_2,c(
dist_err(break_point,estimation_LSTV_2$Break_Point)/n,
dist_err(estimation_LSTV_2$Break_Point,break_point)/n,
PDR_FDR(estimation_LSTV_2$raw_beta,raw_Beta),
PDR_bias(estimation_LSTV_2$raw_beta,raw_Beta))
)
result_cpm=rbind(result_cpm,c(
dist_err(break_point,estimation_cpm$Break_Point)/n,
dist_err(estimation_cpm$Break_Point,break_point)/n,
PDR_FDR(estimation_cpm$raw_beta,raw_Beta),
PDR_bias(estimation_cpm$raw_beta,raw_Beta))
)
result_bcp=rbind(result_SIFS,c(
dist_err(break_point,estimation_bcp$Break_Point)/n,
dist_err(estimation_bcp$Break_Point,break_point)/n,
PDR_FDR(estimation_bcp$raw_beta,raw_Beta),
PDR_bias(estimation_bcp$raw_beta,raw_Beta))
)
result_ecp=rbind(result_SIFS,c(
dist_err(break_point,estimation_ecp$Break_Point)/n,
dist_err(estimation_ecp$Break_Point,break_point)/n,
PDR_FDR(estimation_ecp$raw_beta,raw_Beta),
PDR_bias(estimation_ecp$raw_beta,raw_Beta))
)
print(i)
}
sim_list=list(SIFS=result_SIFS,LS_TV1=result_LSTV_1,LS_TV2=result_LSTV_2,CPM=result_cpm,BCP=result_bcp,ECP=result_ecp)
makeTable(sim_list)
sim_list_2000=sim_list
save(sim_list_200,sim_list_500,sim_list_1000,sim_list_2000,file='sim_sigma05.RData')
